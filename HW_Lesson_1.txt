Бирченко А.Р.


1. просто создаем в гите и клонируем git clone https://github.com/... (но лучше через ssh)
   если https подключение не настроено:
   git remote -v (смотрим какие подключения, если https,то удаляем его)
   git remote rm origin (удаляем)
   git remote add origin git@github.com:user_name/repository.git (подключаем через ssh)
2. в настройках менеджера virtual box (+ перезагрузка)
3. sudo apt install gcc, make, perl
4. 
	-- man				--> содержит справочную информацию (man man и можно почитать подробней)
	-- cd 				--> переход между директориями, просто cd возвращает в корень
	-- ls				--> просмотр всех файлов в текущей директории
	-- hostname			--> посмотреть название хоста (название машины, которое давали при установке убунту)
	-- whoami			--> просмотр имени пользователя
	-- pwd				--> просмотр названия текущей директории
	-- ip				--> для получения информации о сети (ip a выводит всю инфу a = all)
	-- sudo				--> повышает права до админских
	-- reboot			--> для перезагрузки (от админа : sudo reboot)
	-- poweroff			--> для выключения (от админа : sudo poweroff)
	-- apt или apt-get  --> менеджер пакетов (apt - новая версия утилиты)

5. 
	-- shh - сетевой протокол для безопасного подключения и управления ос + передачи файлов
	5.1 Установка shh:
		sudo apt install shh

	5.2 ufw (как я поняла, это штука для защиты подключения, в нашем случае между хостом(рабочей ос) и гостем(ubuntu)):
		-- sudo apt install ufw 		--> установка
		-- sudo ufw status verbose 	--> проверка текущего статуса (после установки статус неактивен (логично :))
		-- sudo ufw enable 			--> включение firewall
		-- sudo ufw allow ssh 			--> разрешаем входящие ssh соединения (порт по умолчанию 22, но можно и прописать напрямую sudo ufw allow ssh <номер порта>)
		-- sudo ufw deny ssh 			--> запрещаем входящие ssh соединения / добавляем в исключения
		-- sudo ufw status numbered	--> тоже проверка статуса но правила пронумерованы

	5.3 ключи ssh = открытая часть (id_rsa.pub)/ закрытая часть(id_rsa). Открытая "общедоступная", закрытая - лежит на компе 
		ssh-keygen			--> команда для генерации ключа

		Что такое приватная часть SSH ключа и как она используется? Что такое публичная часть SSH ключа и как она используется?
		--> Если гугл не врет, то открытый/закрытый (публичный/приватный) шифруют и дешифруют информацию соответственно. С помощью публичного ключа можно заходить на сервер, при этом происходит "сверка". Если все ок, то доступ разрешается.
		
		authorized_keys		--> позволяет отключить на сервере аутентификацию по паролю (а использовать только ssh ключи, ал-я как отключить запрос пароля при использовании sudo)

		Как указать ssh клиенту нужный ключ при подключении?	--> shh имя_юзера@ip_сервера ?

		Не устанавливала ключ, тк от у меня уже был.
		Но по гайдам это нужно делать так:
			1) ssh-keygen 
			2) ввести путь к файлу /host_name/.ssh/id_rsa (думаю, может выйти в ошибку, тк такого файла может не быть..)
			3) ввести пароль 
			4) чтобы отключть ввод пароля: cat ~/.ssh/id_rsa.pub | ssh host_name@ip-адрес-сервера 'cat >> ~/.ssh/authorized_keys' 
			   или echo ssh-rsa строка-публичного-ключа >> /host_name/.ssh/authorized_keys
			5) ssh-keygen -p  --> позволяет сменить пароль

		Восстановить забытый пароль невозможно, нужно заново создавать ключ

